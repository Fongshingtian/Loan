package com.ht.service.impl;

import com.ht.bean.accounts;
import com.ht.bean.integral;
import com.ht.bean.myusers;
import com.ht.bean.real_name;
import com.ht.dao.AccountDao;
import com.ht.service.Accountservice;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Map;

/**
 * @company 宏图
 * @User 张冬招
 * @create 2019-04-24 -19:25
 */
@Service
public class Accountserviceimpl implements Accountservice {
    @Autowired
    private AccountDao accountDao;

    @Override
    public int useradd(myusers myusers) {
        return accountDao.addmyusers(myusers);
    }

    @Override
    public List<myusers> selphones() {
        return accountDao.selphone();
    }

    @Override
    public void addaccounts(accounts accounts) {
        accountDao.addaccounts(accounts);
    }

    @Override
    public myusers loginsel(String phone, String loginpwd) {
        return accountDao.loginsel(phone, loginpwd);
    }

    @Override
    public myusers seluserbyid(Integer uid) {
        return accountDao.seluserbyid(uid);
    }

    @Override
    public accounts selaccountsbyuid(Integer uid) {
        return accountDao.selaccountbyuid(uid);
    }

    @Override
    public real_name selrealbyuid(Integer uid) {
        return accountDao.selrealbyuid(uid);
    }

    @Override
    public List selpoint(Integer uid) {
        return accountDao.selpoint(uid);
    }

    @Override
    public List selpointtwos(Integer uid, String begintime, String endtime) {
        return accountDao.selpointtwo(uid,begintime,endtime);
    }

    @Override
    public List selpointthrees(Integer uid, String begintime, String endtime, String changetype) {
        return accountDao.selpointthree(uid,begintime,endtime,changetype);
    }

    @Override
    public void addpoints(integral integral) {
        accountDao.addpoint(integral);
    }

    @Override
    public void authentication(real_name r) {
        accountDao.authentication(r);
    }

    @Override
    public void updSomething(String tableName, String columnAValue, String requirement) {
        accountDao.updSomething(tableName,columnAValue,requirement);
    }

    @Override
    public void insertTask(Integer id) {
        accountDao.insertTask(id);
    }

    //查询获得一些东西
    @Override
    public List<Map> selSomething(String tableName, String requirement) {
        return accountDao.selSomething(tableName,requirement);
    }

    //添加点东西
    @Override
    public void insertSomething(String tableName, String values) {
        accountDao.insertSomething(tableName,values);
    }
}
